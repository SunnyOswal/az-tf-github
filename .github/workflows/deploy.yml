name: 'Terraform'

on:
   push:
     branches:
     - main
   pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{secrets.TF_ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.TF_ARM_SUB_ID}}
      ARM_TENANT_ID: ${{secrets.TF_ARM_TENANT_ID}}

    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      with:
         persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
         fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

    # Checkout terraform repo
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: SunnyOswal/az-tf
        path: './terraform'

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: |
        cd terraform
        terraform init

    # Generates an execution plan for Terraform
    - name: TerraformPlan
      run: |
        varFilePath=$(find ~+ -maxdepth 1 -type f -name '*.json' -print0)
        echo "Var file path: $varFilePath"
        cd terraform
        terraform plan -input=false -var-file=$varFilePath

      # On push to main, build or change infrastructure according to Terraform configuration files
    - name: TerraformApply
      id: TerraformApply
      if: github.ref == 'refs/heads/main'
      continue-on-error: true
      run: |
        varFilePath=$(find ~+ -maxdepth 1 -type f -name '*.json' -print0)
        cd terraform
        terraform apply -auto-approve -input=false -var-file=$varFilePath

    # If passed, Move var file to processing/passed
    - name: MoveVarFileToPassedDir
      id: MoveVarFileToPassedDir
      if: github.ref == 'refs/heads/main' && steps.TerraformApply.outcome == 'success'
      run: |
        varFilePath=$(find ~+ -maxdepth 1 -type f -name '*.json' -print0)
        mv $varFilePath ./processing/passed
        ls ${{ github.workspace }}/processing/passed
        git config --global user.email "pipeline@pipeline.com"
        git config --global user.name "pipeline"
        git add ./processing/passed
        git commit -m "File processed succesfully"

    # If failed, Move var file to processing/failed
    - name: MoveVarFileToFailedDir
      id: MoveVarFileToFailedDir
      if: github.ref == 'refs/heads/main' && steps.TerraformApply.outcome != 'success'
      run: |
        varFilePath=$(find ~+ -maxdepth 1 -type f -name '*.json' -print0)
        mv $varFilePath ./processing/failed
        git config --global user.email "pipeline@pipeline.com"
        git config --global user.name "pipeline"
        git add ./processing/failed
        git commit -m "File processing failed"
        
    - name: Push Changes
      if: steps.MoveVarFileToPassedDir.outcome == 'success' || steps.MoveVarFileToFailedDir.outcome == 'success'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.REPO_TOKEN }}
        branch: ${{ github.ref }}
